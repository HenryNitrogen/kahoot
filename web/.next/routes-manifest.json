{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/download",
      "regex": "^/download(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/download(?:/)?$"
    },
    {
      "page": "/extension",
      "regex": "^/extension(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/extension(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/payment/success",
      "regex": "^/payment/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment/success(?:/)?$"
    },
    {
      "page": "/payment/test",
      "regex": "^/payment/test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment/test(?:/)?$"
    },
    {
      "page": "/payment-debug",
      "regex": "^/payment\\-debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment\\-debug(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/redeem",
      "regex": "^/redeem(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/redeem(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    },
    {
      "page": "/test",
      "regex": "^/test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test(?:/)?$"
    },
    {
      "page": "/test-callback",
      "regex": "^/test\\-callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-callback(?:/)?$"
    },
    {
      "page": "/test-extension",
      "regex": "^/test\\-extension(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-extension(?:/)?$"
    },
    {
      "page": "/test-ip",
      "regex": "^/test\\-ip(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-ip(?:/)?$"
    },
    {
      "page": "/test-payment-status",
      "regex": "^/test\\-payment\\-status(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-payment\\-status(?:/)?$"
    },
    {
      "page": "/test-recaptcha",
      "regex": "^/test\\-recaptcha(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-recaptcha(?:/)?$"
    },
    {
      "page": "/tutorial",
      "regex": "^/tutorial(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tutorial(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}