// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/admin/page.tsx
{
  const handler = {} as typeof import("../../app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../app/checkout/page.tsx
{
  const handler = {} as typeof import("../../app/checkout/page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ../../app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../app/download/page.tsx
{
  const handler = {} as typeof import("../../app/download/page.js")
  handler satisfies AppPageConfig<"/download">
}

// Validate ../../app/extension/page.tsx
{
  const handler = {} as typeof import("../../app/extension/page.js")
  handler satisfies AppPageConfig<"/extension">
}

// Validate ../../app/login/page.tsx
{
  const handler = {} as typeof import("../../app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/payment-debug/page.tsx
{
  const handler = {} as typeof import("../../app/payment-debug/page.js")
  handler satisfies AppPageConfig<"/payment-debug">
}

// Validate ../../app/payment/guide/page.tsx
{
  const handler = {} as typeof import("../../app/payment/guide/page.js")
  handler satisfies AppPageConfig<"/payment/guide">
}

// Validate ../../app/payment/success/page.tsx
{
  const handler = {} as typeof import("../../app/payment/success/page.js")
  handler satisfies AppPageConfig<"/payment/success">
}

// Validate ../../app/payment/test/page.tsx
{
  const handler = {} as typeof import("../../app/payment/test/page.js")
  handler satisfies AppPageConfig<"/payment/test">
}

// Validate ../../app/privacy/page.tsx
{
  const handler = {} as typeof import("../../app/privacy/page.js")
  handler satisfies AppPageConfig<"/privacy">
}

// Validate ../../app/redeem/page.tsx
{
  const handler = {} as typeof import("../../app/redeem/page.js")
  handler satisfies AppPageConfig<"/redeem">
}

// Validate ../../app/register/page.tsx
{
  const handler = {} as typeof import("../../app/register/page.js")
  handler satisfies AppPageConfig<"/register">
}

// Validate ../../app/terms/page.tsx
{
  const handler = {} as typeof import("../../app/terms/page.js")
  handler satisfies AppPageConfig<"/terms">
}

// Validate ../../app/test-callback/page.tsx
{
  const handler = {} as typeof import("../../app/test-callback/page.js")
  handler satisfies AppPageConfig<"/test-callback">
}

// Validate ../../app/test-extension/page.tsx
{
  const handler = {} as typeof import("../../app/test-extension/page.js")
  handler satisfies AppPageConfig<"/test-extension">
}

// Validate ../../app/test-ip/page.tsx
{
  const handler = {} as typeof import("../../app/test-ip/page.js")
  handler satisfies AppPageConfig<"/test-ip">
}

// Validate ../../app/test-payment-status/page.tsx
{
  const handler = {} as typeof import("../../app/test-payment-status/page.js")
  handler satisfies AppPageConfig<"/test-payment-status">
}

// Validate ../../app/test-payment/page.tsx
{
  const handler = {} as typeof import("../../app/test-payment/page.js")
  handler satisfies AppPageConfig<"/test-payment">
}

// Validate ../../app/test-recaptcha/page.tsx
{
  const handler = {} as typeof import("../../app/test-recaptcha/page.js")
  handler satisfies AppPageConfig<"/test-recaptcha">
}

// Validate ../../app/test-upgrade/page.tsx
{
  const handler = {} as typeof import("../../app/test-upgrade/page.js")
  handler satisfies AppPageConfig<"/test-upgrade">
}

// Validate ../../app/test/page.tsx
{
  const handler = {} as typeof import("../../app/test/page.js")
  handler satisfies AppPageConfig<"/test">
}

// Validate ../../app/tutorial/page.tsx
{
  const handler = {} as typeof import("../../app/tutorial/page.js")
  handler satisfies AppPageConfig<"/tutorial">
}

// Validate ../../app/api/admin/codes/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/codes/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/codes">
}

// Validate ../../app/api/admin/dashboard/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/dashboard/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/dashboard">
}

// Validate ../../app/api/admin/users/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users">
}

// Validate ../../app/api/ai/answer/route.ts
{
  const handler = {} as typeof import("../../app/api/ai/answer/route.js")
  handler satisfies RouteHandlerConfig<"/api/ai/answer">
}

// Validate ../../app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../app/api/auth/me/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/me/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/me">
}

// Validate ../../app/api/auth/register/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/register">
}

// Validate ../../app/api/download/extension/route.ts
{
  const handler = {} as typeof import("../../app/api/download/extension/route.js")
  handler satisfies RouteHandlerConfig<"/api/download/extension">
}

// Validate ../../app/api/download/stats/route.ts
{
  const handler = {} as typeof import("../../app/api/download/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/download/stats">
}

// Validate ../../app/api/payment/create-order/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/create-order/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/create-order">
}

// Validate ../../app/api/payment/hupijiao/create/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/hupijiao/create/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/hupijiao/create">
}

// Validate ../../app/api/payment/hupijiao/notify/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/hupijiao/notify/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/hupijiao/notify">
}

// Validate ../../app/api/payment/hupijiao/query/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/hupijiao/query/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/hupijiao/query">
}

// Validate ../../app/api/payment/process-success/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/process-success/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/process-success">
}

// Validate ../../app/api/payment/status/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/status/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/status">
}

// Validate ../../app/api/payment/webhook/route.ts
{
  const handler = {} as typeof import("../../app/api/payment/webhook/route.js")
  handler satisfies RouteHandlerConfig<"/api/payment/webhook">
}

// Validate ../../app/api/redeem/route.ts
{
  const handler = {} as typeof import("../../app/api/redeem/route.js")
  handler satisfies RouteHandlerConfig<"/api/redeem">
}

// Validate ../../app/api/test-recaptcha/route.ts
{
  const handler = {} as typeof import("../../app/api/test-recaptcha/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-recaptcha">
}

// Validate ../../app/api/usage/history/route.ts
{
  const handler = {} as typeof import("../../app/api/usage/history/route.js")
  handler satisfies RouteHandlerConfig<"/api/usage/history">
}





// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
